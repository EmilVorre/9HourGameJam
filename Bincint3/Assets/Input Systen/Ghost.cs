//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Input Systen/Ghost.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Ghost: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Ghost()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Ghost"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""c8803f6e-5be4-4ebb-81de-16e9181fe364"",
            ""actions"": [
                {
                    ""name"": ""Ghost_Movement"",
                    ""type"": ""Value"",
                    ""id"": ""eb5a7fd6-7e0e-46f0-9226-00f0612ee6a6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Ghost_Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""00fad7d1-556f-4df1-8b49-1336e614fa68"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ghoul_Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""15af5bce-ba23-46e6-9c59-2e969d6d04ad"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ghoul_Movement"",
                    ""type"": ""Button"",
                    ""id"": ""b80357f4-1471-4c62-9ec4-993bbe18351b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""120ae487-de0b-4992-8c4a-f49b165bc635"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""711189b9-ba41-4a50-9a72-ad6781123085"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a8279b96-8170-433c-b9ea-c4a10dd123a2"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6dc822b6-8d3e-4bf9-998b-af1ba97ebb47"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ab4cdb00-414c-47c0-977b-b62ea2b0e004"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""782c690e-9eff-476f-adc2-15eb02b34eb3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""64a195af-191d-4932-a178-8feb9c0225a7"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""36b854bc-d7e0-44e3-93d6-354cbdaa9278"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8ce527c3-c9f9-4fe3-809a-fe1f95dde0be"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""01f292da-6050-4841-9723-9baeef9f1e61"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f0743409-bb93-4928-8b3e-88e0dbf11725"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghoul_Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d76afdf-032b-4f93-b85c-1bab5aee686b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghoul_Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d225048d-286d-48ba-a387-deb5c0d38d04"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e84dd466-291d-47aa-832a-818446edeb01"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghost_Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""ebe55af2-3f8d-45e9-922e-ca97dc385405"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghoul_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a6f4884b-ab27-4c01-bce4-4d63d6329873"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghoul_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6c99fa6d-9446-43ba-bfd3-27a4cde70b62"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghoul_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2dbf984a-c0db-4566-ae52-2ee00602936f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghoul_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""439dd614-e056-487c-9590-b5db77891036"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ghoul_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Ghost_Movement = m_Player.FindAction("Ghost_Movement", throwIfNotFound: true);
        m_Player_Ghost_Interaction = m_Player.FindAction("Ghost_Interaction", throwIfNotFound: true);
        m_Player_Ghoul_Interaction = m_Player.FindAction("Ghoul_Interaction", throwIfNotFound: true);
        m_Player_Ghoul_Movement = m_Player.FindAction("Ghoul_Movement", throwIfNotFound: true);
    }

    ~@Ghost()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, Ghost.Player.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Ghost_Movement;
    private readonly InputAction m_Player_Ghost_Interaction;
    private readonly InputAction m_Player_Ghoul_Interaction;
    private readonly InputAction m_Player_Ghoul_Movement;
    public struct PlayerActions
    {
        private @Ghost m_Wrapper;
        public PlayerActions(@Ghost wrapper) { m_Wrapper = wrapper; }
        public InputAction @Ghost_Movement => m_Wrapper.m_Player_Ghost_Movement;
        public InputAction @Ghost_Interaction => m_Wrapper.m_Player_Ghost_Interaction;
        public InputAction @Ghoul_Interaction => m_Wrapper.m_Player_Ghoul_Interaction;
        public InputAction @Ghoul_Movement => m_Wrapper.m_Player_Ghoul_Movement;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Ghost_Movement.started += instance.OnGhost_Movement;
            @Ghost_Movement.performed += instance.OnGhost_Movement;
            @Ghost_Movement.canceled += instance.OnGhost_Movement;
            @Ghost_Interaction.started += instance.OnGhost_Interaction;
            @Ghost_Interaction.performed += instance.OnGhost_Interaction;
            @Ghost_Interaction.canceled += instance.OnGhost_Interaction;
            @Ghoul_Interaction.started += instance.OnGhoul_Interaction;
            @Ghoul_Interaction.performed += instance.OnGhoul_Interaction;
            @Ghoul_Interaction.canceled += instance.OnGhoul_Interaction;
            @Ghoul_Movement.started += instance.OnGhoul_Movement;
            @Ghoul_Movement.performed += instance.OnGhoul_Movement;
            @Ghoul_Movement.canceled += instance.OnGhoul_Movement;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Ghost_Movement.started -= instance.OnGhost_Movement;
            @Ghost_Movement.performed -= instance.OnGhost_Movement;
            @Ghost_Movement.canceled -= instance.OnGhost_Movement;
            @Ghost_Interaction.started -= instance.OnGhost_Interaction;
            @Ghost_Interaction.performed -= instance.OnGhost_Interaction;
            @Ghost_Interaction.canceled -= instance.OnGhost_Interaction;
            @Ghoul_Interaction.started -= instance.OnGhoul_Interaction;
            @Ghoul_Interaction.performed -= instance.OnGhoul_Interaction;
            @Ghoul_Interaction.canceled -= instance.OnGhoul_Interaction;
            @Ghoul_Movement.started -= instance.OnGhoul_Movement;
            @Ghoul_Movement.performed -= instance.OnGhoul_Movement;
            @Ghoul_Movement.canceled -= instance.OnGhoul_Movement;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnGhost_Movement(InputAction.CallbackContext context);
        void OnGhost_Interaction(InputAction.CallbackContext context);
        void OnGhoul_Interaction(InputAction.CallbackContext context);
        void OnGhoul_Movement(InputAction.CallbackContext context);
    }
}
